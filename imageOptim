#!/bin/sh

bin="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )/lib"
scope=$1

function echo_fail {
  printf "\e[31m✘ $1"
  echo "\033[0m"
}

function echo_pass {
  printf "\e[32m✔ $1"
  echo "\033[0m"
}

function echo_item {
  printf "\e[36m• $1"
  echo "\033[0m"
}

# (1500) -> 1.500
function to_kb {
  echo $(bc <<< "scale=3; $1/1000")
}

# (10000) -> 10,000
function format_number {
  printf "%'.3f\n" $1
}

# (./some_file.txt) -> 11496328
function size_in_bytes {
  stat -f %z "$1"
}

# (./some_file.txt) -> 11,496.328 KB
function echo_size {
  echo $(format_number $(to_kb $(size_in_bytes "$1")))" KB"
}

# (./some_file.txt, "txt", "ext") -> "some_file.ext.txt"
function add_sub_extension {
  echo "$1" | sed -e "s/\.$2/.$3.$2/g"
}

function echo_if {
  if [ $1 == 1 ]; then
    echo_pass $2
  else
    echo_fail $2
  fi
}

function echo_file {
  echo "Optimising $1"
}

if [ -d $scope ]; then
  echo_pass "Found ${scope}"
else
  echo_fail "Could not find directory"
  exit 1
fi

# ==========================================================================

# optipng (bmp, gif, png, pnm, tiff)
function use_optipng {
  local renamed=$(add_sub_extension "$1" $2 "optipng")
  cp "$1" "$renamed"
  ${bin}/optipng -quiet -o7 "$renamed" > /dev/null 2>&1
  echo_item "$(echo_size $renamed) optipng"
}

# pngout (bmp, gif, jpg, jpeg, pcx, png, tga)
function use_pngout {
  local renamed=$(add_sub_extension "$1" $2 "pngout")
  ${bin}/pngout -q -y "$1" "$renamed" > /dev/null 2>&1
  mv "$renamed".png "$renamed"
  echo_item "$(echo_size $renamed) pngout"
}

# advpng (png)
function use_advpng {
  local renamed=$(add_sub_extension "$1" $2 "advpng")
  cp "$1" "$renamed"
  ${bin}/advpng --quiet --recompress --shrink-insane "$renamed" > /dev/null 2>&1
  echo_item "$(echo_size $renamed) advpng"
}

# pngcrush (png)
function use_pngcrush {
  local renamed=$(add_sub_extension "$1" $2 "pngcrush")
  ${bin}/pngcrush -q -rem allb -brute -force -q "$1" "$renamed" > /dev/null 2>&1
  echo_item "$(echo_size $renamed) pngcrush"
}

# gifsicle (gif)
function use_gifsicle {
  local renamed=$(add_sub_extension "$1" $2 "gifsicle")
  ${bin}/gifsicle -O3 "$1" -o "$renamed" > /dev/null 2>&1
  echo_item "$(echo_size $renamed) gifsicle"
}

# jpegoptim (jpg, jpeg)
function use_jpegoptim {
  local renamed=$(add_sub_extension "$1" $2 "jpegoptim")
  cp "$1" "$renamed"
  ${bin}/jpegoptim -q --strip-all -t -o "$renamed" > /dev/null 2>&1
  echo_item "$(echo_size $renamed) jpegoptim"
}

# jpegtran (jpg, jpeg)
function use_jpegtran {
  local renamed=$(add_sub_extension "$1" $2 "jpegtran")
  ${bin}/jpegtran -copy none -optimize -verbose -outfile "$renamed" "$1" > /dev/null 2>&1
  echo_item "$(echo_size $renamed) jpegtran"
}

# ==========================================================================

function optimise_bmp {
  use_optipng "$1" "bmp"
  use_pngout "$1" "bmp"
}

function optimise_gif {
  use_optipng "$1" "gif"
  use_pngout "$1" "gif"
}

function optimise_png {
  use_advpng "$1" "png"
  use_pngcrush "$1" "png"
  use_optipng "$1" "png"
  use_pngout "$1" "png"
}

function optimise_jpg {
  use_jpegoptim "$1" "jpg"
  use_jpegtran "$1" "jpg"
}

function optimise_jpeg {
  use_jpegoptim "$1" "jpeg"
  use_jpegtran "$1" "jpeg"
}

function optimise_pnm {
  use_optipng "$1" "pnm"
}

function optimise_tiff {
  use_optipng "$1" "tiff"
}

function optimise_pcx {
  use_pngout "$1" "pcx"
}

function optimise_tga {
  use_pngout "$1" "tga"
}

# ==========================================================================

for file in `find $scope -name "*.bmp"`; do
  echo_file "$file"
  optimise_bmp "$file"
done

for file in `find $scope -name "*.gif"`; do
  echo_file "$file"
  optimise_gif "$file"
done

for file in `find $scope -name "*.png"`; do
  echo_file "$file"
  optimise_png "$file"
done

for file in `find $scope -name "*.jpg"`; do
  echo_file "$file"
  optimise_jpg "$file"
done

for file in `find $scope -name "*.jpeg"`; do
  echo_file "$file"
  optimise_jpeg "$file"
done

for file in `find $scope -name "*.pnm"`; do
  echo_file "$file"
  optimise_pnm "$file"
done

for file in `find $scope -name "*.tiff"`; do
  echo_file "$file"
  optimise_tiff "$file"
done

for file in `find $scope -name "*.pcx"`; do
  echo_file "$file"
  optimise_pcx "$file"
done

for file in `find $scope -name "*.tga"`; do
  echo_file "$file"
  optimise_tga "$file"
done
